// Code generated by MockGen. DO NOT EDIT.
// Source: passwordreader.go

// Package passwordreader is a generated GoMock package.
package passwordreader

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPasswordReader is a mock of PasswordReader interface.
type MockPasswordReader struct {
	ctrl     *gomock.Controller
	recorder *MockPasswordReaderMockRecorder
}

// MockPasswordReaderMockRecorder is the mock recorder for MockPasswordReader.
type MockPasswordReaderMockRecorder struct {
	mock *MockPasswordReader
}

// NewMockPasswordReader creates a new mock instance.
func NewMockPasswordReader(ctrl *gomock.Controller) *MockPasswordReader {
	mock := &MockPasswordReader{ctrl: ctrl}
	mock.recorder = &MockPasswordReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPasswordReader) EXPECT() *MockPasswordReaderMockRecorder {
	return m.recorder
}

// ReadPassword mocks base method.
func (m *MockPasswordReader) ReadPassword() ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadPassword")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadPassword indicates an expected call of ReadPassword.
func (mr *MockPasswordReaderMockRecorder) ReadPassword() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadPassword", reflect.TypeOf((*MockPasswordReader)(nil).ReadPassword))
}
